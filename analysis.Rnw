%\VignetteEngine{knitr::knitr_notangle}

\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\begin{document}

<<setup-knitr, cache=FALSE, echo=FALSE>>=
library(knitr)
opts_chunk$set(fig.path="figure/pre-", cache.path="cache/pre-")
@

\section{Explore data}

<<setup, cache=TRUE, echo=TRUE>>=
suppressPackageStartupMessages(library(dplyr))

# read in the csv data
x <- read.csv("data/mergedMamCs.csv")

# limit the data to timepoints 1 and 5
x <- filter(x, TimePt == 1 || TimePt == 5) %>%
#  delete "mean50", "dsScaSco" and their associated change scores
     select(-mean50, -dsScaSco, -mean50cs, -dsScaScoCs) %>%
# rename T_score_CW variable
     rename(stroop_score = T_score_CW )

variables.list <- list(ptpmovement=c("pv", "tpv", "ag1Dur", "qAg1", "ag1overt1", "q30", "qAg", 
                                     "nab", "qAnt", "Concon_Pre_flex_1", "Concon_Post_flex_1"),
                       strength=c("flMVC", "ex_abs_Pk_Tor"), 
                       hold.release=c("tr50", "td50"), 
                       cognition=c("dig_sum", "stroop_score", "bta_SUM"), 
                       physical=c("PPT", "STS", "FRTCM", "TUG", "BBS", "SMW_M", "FFWS")
                      )
variables <- unlist(variables.list, use.names=FALSE)
                      
clinical.variables <- c("updrs", "brady", "rigid", "tremor", "axial")

new.change.variables <- c(variables, clinical.variables)

misc.variables <- c("id", "TimePt", "DrugStatusOn", "Group", "completers",
                    "pairnum")


#split the dataframe into 24 months and baseline
d.24 <- filter(x, TimePt == 5)
d.0 <- filter(x, TimePt == 1)

# check that the patient id and the DrugStatusOn columns match in the two sets
c(all.equal(d.24$id, d.0$id), all.equal(d.24$DrugStatusOn, d.0$DrugStatusOn))

# change scores are the difference between d.24 and d.0 variables
cs <- d.24[, new.change.variables] - d.0[, new.change.variables]
cs$id <- d.24$id
cs$DrugStatusOn <- factor(d.24$DrugStatusOn, levels=c(0,1),
                          labels=c("DrugStatusOff", "DrugStatusOn"))
cs$Group <- as.factor(d.24$Group)
@

\newpage

\section{Plots of change scores}

<<plots-of-change-scores-pv, cache=TRUE, echo=TRUE, fig.height=6, fig.width=8>>=
library(ggplot2)
library(reshape2)
cs.melt <- melt(cs, id.vars=c(clinical.variables, "DrugStatusOn", "id", "Group"))
cs.melt.list <- lapply(variables.list, function(z) filter(cs.melt, variable %in% z))
# split up the variables so the graphs aren't too busy
cs.melt.list[["ptp1"]] = filter(cs.melt.list$ptpmovement, variable %in% variables.list$ptp[1:5])
cs.melt.list[["ptp2"]] = filter(cs.melt.list$ptpmovement, variable %in% variables.list$ptp[-c(1:5)])
cs.melt.list[["ptpmovement"]] <- NULL


#test out a graph for one variable
qplot(updrs, pv, data=cs, geom="point", color=DrugStatusOn) + geom_smooth(method="lm")

# run a correlation test on two variables
GetCorTestValues <- function(d, var1, var2) {
  ret <- cor.test(d[[var1]], d[[var2]])
  ret <- c(ret$estimate, ret$df, p.value=ret$p.value, ret$parameter, ret$statistic)
  rbind(ret)
}
#GetCorTestValues(filter(cs, DrugStatusOn=="DrugStatusOn"), "updrs", "pv")

# split dataframe by drug status and run two correlation tests
GetTestByDrugStatus <- function(d, var1, var2) {
  ret.on.0 <- GetCorTestValues(filter(d, DrugStatusOn=="DrugStatusOn", Group==0) , var1, var2)
  ret.on.1 <- GetCorTestValues(filter(d, DrugStatusOn=="DrugStatusOn", Group==1) , var1, var2)
  ret.off.0 <- GetCorTestValues(filter(d, DrugStatusOn=="DrugStatusOff", Group==0), var1, var2)
  ret.off.1 <- GetCorTestValues(filter(d, DrugStatusOn=="DrugStatusOff", Group==1), var1, var2)
  ret <- rbind.data.frame(ret.on.0, ret.on.1, ret.off.0, ret.off.1)
  ret$DrugStatusOn <- rep(c("Off", "On"),2)
  ret$DrugStatusOn <- as.factor(ret$DrugStatusOn)
  ret$Group <- rep(c(0,1), 2)
  ret$var1 <- var1
  ret$var2 <- var2
  row.names(ret) <- NULL
  ret
}
#GetTestByDrugStatus(cs, "updrs", "pv")

GetTestResultsbyResponseVariable <- function(d, response_var, indep_vars_list) {
  ret <- do.call(rbind.data.frame, 
    lapply(indep_vars_list, function(z) GetTestByDrugStatus(d, response_var, z)))
  ret %>% mutate(stars=ifelse(abs(t)>2, "*", ""), cor=round(cor,2), t=round(t,2),
                 p.value=round(p.value,2)) %>% 
          select(resp=var1, indep=var2, grp=Group, DrugStat=DrugStatusOn, 
                 cor, p.value, df, t, stars) 
}
#GetTestResultsbyResponseVariable(cs, "updrs", variables.list$ptp[1:5])
@

\newpage

\subsection{PtP movement variables}

<<plots-of-change-scores-ptp, echo=TRUE, cache=TRUE, fig.height=6, fig.width=8>>=
qplot(updrs, value, data=cs.melt.list$ptp1, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "updrs", variables.list$ptp[1:5])
qplot(axial, value, data=cs.melt.list$ptp1, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "axial", variables.list$ptp[1:5])
qplot(tremor, value, data=cs.melt.list$ptp1, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "tremor", variables.list$ptp[1:5])
qplot(brady, value, data=cs.melt.list$ptp1, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "brady", variables.list$ptp[1:5])
qplot(rigid, value, data=cs.melt.list$ptp1, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "rigid", variables.list$ptp[1:5])

qplot(updrs, value, data=cs.melt.list$ptp2, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "updrs", variables.list$ptp[-c(1:5)])
qplot(axial, value, data=cs.melt.list$ptp2, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "axial", variables.list$ptp[-c(1:5)])
qplot(tremor, value, data=cs.melt.list$ptp2, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "tremor", variables.list$ptp[-c(1:5)])
qplot(brady, value, data=cs.melt.list$ptp2, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "brady", variables.list$ptp[-c(1:5)])
qplot(rigid, value, data=cs.melt.list$ptp2, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "rigid", variables.list$ptp[-c(1:5)])
@

\newpage

\subsection{Strength variables}
<<plots-of-change-scores-strength, echo=TRUE, cache=TRUE, fig.height=6, fig.width=8 >>=
qplot(updrs, value, data=cs.melt.list$strength, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "updrs", variables.list$strength)
qplot(axial, value, data=cs.melt.list$strength, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "axial", variables.list$strength)
qplot(tremor, value, data=cs.melt.list$strength, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "tremor", variables.list$strength)
qplot(brady, value, data=cs.melt.list$strength, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "brady", variables.list$strength)
qplot(rigid, value, data=cs.melt.list$strength, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "rigid", variables.list$strength)
@

\newpage

\subsection{Hold Release variables}
<<plots-of-change-scores-hold, echo=TRUE, cache=TRUE, fig.height=6, fig.width=8 >>=
qplot(updrs, value, data=cs.melt.list$hold.release, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "updrs", variables.list$hold.release)
qplot(axial, value, data=cs.melt.list$hold.release, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "axial", variables.list$hold.release)
qplot(tremor, value, data=cs.melt.list$hold.release, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "tremor", variables.list$hold.release)
qplot(brady, value, data=cs.melt.list$hold.release, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "brady", variables.list$hold.release)
qplot(rigid, value, data=cs.melt.list$hold.release, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "rigid", variables.list$hold.release)
@

\newpage

\subsection{Cognition variables}
<<plots-of-change-scores-cognition, echo=TRUE, cache=TRUE, fig.height=8, fig.width=8.8 >>=
qplot(updrs, value, data=cs.melt.list$cognition, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "updrs", variables.list$cognition)
qplot(axial, value, data=cs.melt.list$cognition, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "axial", variables.list$cognition)
qplot(tremor, value, data=cs.melt.list$cognition, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "tremor", variables.list$cognition)
qplot(brady, value, data=cs.melt.list$cognition, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "brady", variables.list$cognition)
qplot(rigid, value, data=cs.melt.list$cognition, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "rigid", variables.list$cognition)
@

\newpage

\subsection{Physical variables}
<<plots-of-change-scores-physical, echo=TRUE, cache=TRUE, fig.height=6, fig.width=8 >>=
qplot(updrs, value, data=cs.melt.list$physical, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "updrs", variables.list$physical)
qplot(axial, value, data=cs.melt.list$physical, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "axial", variables.list$physical)
qplot(tremor, value, data=cs.melt.list$physical, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "tremor", variables.list$physical)
qplot(brady, value, data=cs.melt.list$physical, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "brady", variables.list$physical)
qplot(rigid, value, data=cs.melt.list$physical, geom="point", color=Group) + 
      facet_wrap(~variable+DrugStatusOn, scales="free_y") + geom_smooth(method="lm")
GetTestResultsbyResponseVariable(cs, "rigid", variables.list$physical)
@




\end{document}
